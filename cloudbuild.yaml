steps:
  # Step 1: Build Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "--no-cache",
        "-t",
        "us-central1-docker.pkg.dev/codebuild-444613/my-repo/my-app:$BUILD_ID",
        ".",
      ]

  # Step 2: Push Docker image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "us-central1-docker.pkg.dev/codebuild-444613/my-repo/my-app:$BUILD_ID",
      ]

  # Step 3: Update Kubernetes Deployment to Use New Image
  - name: "gcr.io/cloud-builders/kubectl"
    args:
      - "set"
      - "image"
      - "deployment/my-deployment"
      - "my-app=us-central1-docker.pkg.dev/codebuild-444613/my-repo/my-app:$BUILD_ID"
    env:
      - "CLOUDSDK_COMPUTE_REGION=us-central1"
      - "CLOUDSDK_CONTAINER_CLUSTER=my-cluster"

  # Step 4: Expose the service
  - name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "service.yaml"
    env:
      - "CLOUDSDK_COMPUTE_REGION=us-central1"
      - "CLOUDSDK_CONTAINER_CLUSTER=my-cluster"

images:
  - "us-central1-docker.pkg.dev/codebuild-444613/my-repo/my-app:$BUILD_ID"

options:
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _BUILD_ID: $BUILD_ID
